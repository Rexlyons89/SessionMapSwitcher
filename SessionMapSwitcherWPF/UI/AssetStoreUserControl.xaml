<UserControl x:Class="SessionModManagerWPF.UI.AssetStoreUserControl"
             x:Name="ctrlAssetStore"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SessionModManagerWPF.UI"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="900">
    <UserControl.Resources>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="0,0,0,0"/>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource MainButtonStyle}"/>

        <Style TargetType="{x:Type ListViewItem}" x:Key="AssetListStyle">
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Style>


        <DataTemplate x:Key="AuthorComboBoxContentTemplate">
            <Grid x:Name="gd" DataContext="{Binding ElementName=ctrlAssetStore, Path=DataContext}" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding ElementName=gd, Path=DataContext.AuthorToFilterBy.Author, FallbackValue='Author Name'}" 
                                       HorizontalAlignment="Stretch"
                                       Padding="0,2,0,2"
                                       Margin="4,0,0,0"/>
                <TextBlock Text="{Binding ElementName=gd, Path=DataContext.AuthorToFilterBy.AssetCountDisplayText, FallbackValue='(4)'}" 
                                       Grid.Column="1" 
                                       HorizontalAlignment="Right"
                                       Padding="0,2,0,2"
                                       Margin="0,0,30,0"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="InstallStatusContentTemplate">
            <Grid x:Name="gd" DataContext="{Binding ElementName=ctrlAssetStore, Path=DataContext}" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding ElementName=gd, Path=DataContext.SelectedInstallStatus, FallbackValue='Installed / Not Installed'}" 
                           HorizontalAlignment="Stretch"
                           Padding="0,2,0,2"
                           Margin="4,0,0,0"/>
            </Grid>
        </DataTemplate>

        <Style TargetType="{x:Type ComboBoxItem}" x:Key="AuthorComboBoxItemStyle" BasedOn="{StaticResource DefaultComboBoxItem}">
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Bd" BorderThickness="1" CornerRadius="1">
                            <Grid x:Name="gd">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Author, FallbackValue='Author Name'}" 
                                           HorizontalAlignment="Stretch"
                                           Padding="0,2,0,2"
                                           Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding AssetCountDisplayText, FallbackValue='(4)'}" 
                                           Grid.Column="1" 
                                           HorizontalAlignment="Right"
                                           Padding="0,2,0,2"
                                           Margin="0,0,10,0"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="gd" Property="IsMouseOver" Value="True">
                                <Setter TargetName="gd" Property="Background" Value="{StaticResource AppPrimaryBrush}"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource AppAccentBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                   
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}" x:Key="AuthorComboBoxStyle" BasedOn="{StaticResource ComboBoxDefaultStyle}">
            <Setter Property="ItemTemplate" Value="{StaticResource AuthorComboBoxContentTemplate}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource AuthorComboBoxItemStyle}"/>
        </Style>

        <Style TargetType="{x:Type ComboBox}" x:Key="InstallStatusComboBoxStyle" BasedOn="{StaticResource ComboBoxDefaultStyle}">
            <Setter Property="ItemTemplate" Value="{StaticResource InstallStatusContentTemplate}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultComboBoxItem}"/>
        </Style>

    </UserControl.Resources>

    <Grid Background="#CFD8DC">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.25*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>


        <GroupBox Grid.Row="0" Grid.Column="0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom"
                  Margin="5,5,0,10"
                  Header="Categories" Padding="3,10,0,10">
            <StackPanel VerticalAlignment="Bottom">
                <WrapPanel>
                    <CheckBox Content="All" IsChecked="{Binding DisplayAll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,35,5"/>
                    <CheckBox Content="Maps" IsChecked="{Binding DisplayMaps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,10,0"/>
                    <CheckBox Content="Decks" IsChecked="{Binding DisplayDecks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,10,0"/>
                    <CheckBox Content="Griptapes" IsChecked="{Binding DisplayGriptapes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,7,0"/>
                    <CheckBox Content="Trucks" IsChecked="{Binding DisplayTrucks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,10,0"/>
                    <CheckBox Content="Meshes" IsChecked="{Binding DisplayMeshes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,10,0"/>
                </WrapPanel>

                <WrapPanel>
                    <CheckBox Content="Wheels" IsChecked="{Binding DisplayWheels, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,10,0"/>
                    <CheckBox Content="Hats" IsChecked="{Binding DisplayHats, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,15,0"/>
                    <CheckBox Content="Shirts" IsChecked="{Binding DisplayShirts, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,12,0"/>
                    <CheckBox Content="Pants" IsChecked="{Binding DisplayPants, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,30,0"/>
                    <CheckBox Content="Shoes" IsChecked="{Binding DisplayShoes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,10,0"/>
                    <CheckBox Content="Characters" IsChecked="{Binding DisplayCharacters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,10,0"/>
                </WrapPanel>
            </StackPanel>
        </GroupBox>


        <ListView x:Name="lstAssets"
                  Grid.Row="1" Grid.Column="0"
                  GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  ItemsSource="{Binding FilteredAssetList}"
                  ItemContainerStyle="{StaticResource AssetListStyle}"
                  SelectionChanged="lstAssets_SelectionChanged"
                  Margin="5,10,0,5">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" Width="190" DisplayMemberBinding="{Binding Name}"/>
                    <GridViewColumn Header="Author" Width="100" DisplayMemberBinding="{Binding Author}"/>
                    <GridViewColumn Header="Category" Width="95" DisplayMemberBinding="{Binding AssetCategory}"/>
                    <GridViewColumn Header="Updated Date" Width="130" DisplayMemberBinding="{Binding UpdatedDate}"/>
                </GridView>
            </ListView.View>
        </ListView>


        <ListView x:Name="lstDownloads" 
                  Grid.Row="2" 
                  Margin="5,0,0,10"
                  ItemsSource="{Binding CurrentDownloads, UpdateSourceTrigger=PropertyChanged}"
                  MinHeight="75"
                  MaxHeight="100">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="menuItemCancelDownload" Header="Cancel selected download" Click="menuItemCancelDownload_Click"/>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Item" Width="200" DisplayMemberBinding="{Binding ItemName, FallbackValue='item text'}"/>
                    <GridViewColumn x:Name="colProgress" Header="Progress" Width="200">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ProgressBar Value="{Binding PercentComplete, FallbackValue='50'}" Width="{Binding ElementName=colProgress, Path=ActualWidth}" Height="10"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Speed" Width="100" DisplayMemberBinding="{Binding DownloadSpeed, FallbackValue='32.5 kb/s'}"/>
                </GridView>
            </ListView.View>
        </ListView>


        <GroupBox Grid.Row="1" Grid.Column="1"
                  Grid.RowSpan="2"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Margin="5,0,5,10"
                  Header="Selected Asset Preview">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Margin="0,0,0,10">
                    <WrapPanel Margin="0,0,0,0">
                        <TextBlock Text="Author:"
                                   Margin="5,5,5,0"
                                   FontWeight="Bold"/>
                        <TextBlock Text="{Binding SelectedAuthor, FallbackValue='Author name'}"
                                   TextWrapping="Wrap"
                                   Margin="5,5,0,0"/>
                    </WrapPanel>

                    <WrapPanel Margin="0,0,0,0">
                        <TextBlock Text="Description:" 
                                   Margin="5,5,5,0"
                                   FontWeight="Bold"/>
                        <TextBlock Text="{Binding SelectedDescription, FallbackValue='example description for a selected asset.'}"
                                   TextWrapping="Wrap"
                                   Margin="5,5,0,0"/>
                    </WrapPanel>
                </StackPanel>




                <Image Source="{Binding PreviewImageSource}" Margin="5,0,5,5"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Grid.Row="1"
                       RenderOptions.BitmapScalingMode="HighQuality">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoadingImage, FallbackValue='False'}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

                <TextBlock Text="Loading Preview Image ..."
                           Grid.Row="1"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoadingImage, FallbackValue='True'}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <WrapPanel Grid.Row="2" 
                           HorizontalAlignment="Right" 
                           VerticalAlignment="Bottom">
                    <Button x:Name="btnRemove"
                            ToolTip="Delete the files related to this asset from your game."
                            Content="{Binding RemoveButtonText, FallbackValue='Remove Asset'}"
                            IsEnabled="{Binding IsRemoveButtonEnabled}"
                            Click="btnRemove_Click"
                            Margin="0,0,10,0"
                            Padding="5">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MainButtonStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRemoveButtonEnabled}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button x:Name="btnInstall"
                            Content="{Binding InstallButtonText, FallbackValue='Install Asset'}"
                            IsEnabled="{Binding IsInstallButtonEnabled}"
                            Click="btnInstall_Click"
                            Padding="5"/>
                </WrapPanel>


            </Grid>
        </GroupBox>

        <StackPanel Grid.Column="1"
                    Margin="10,15,0,10"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top">
            <Label Content="By Author:" Padding="0" FontSize="11"/>
            <ComboBox Width="145" 
                      Margin="0,0,0,3"
                      FontSize="11"
                      ToolTip="Choose an Author to filter by"
                      ItemsSource="{Binding AuthorList}"
                      Style="{StaticResource AuthorComboBoxStyle}"
                      SelectedValue="{Binding AuthorToFilterBy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            </ComboBox>

            <Label Content="Install Status:" Padding="0" FontSize="11"/>
            <ComboBox Width="145" 
                      FontSize="11"
                      ToolTip="Filter the list of assets by installed or not installed"
                      ItemsSource="{Binding InstallStatusList}"
                      Style="{StaticResource InstallStatusComboBoxStyle}"
                      SelectedValue="{Binding SelectedInstallStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        </StackPanel>

        <StackPanel Grid.Column="1"
                    Margin="0,18,5,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top">
            <WrapPanel Margin="0,0,0,10">

                <Button x:Name="btnRefresh"
                        Margin="0,0,0,0"
                        Content="Refresh Assets"
                        IsEnabled="{Binding IsNotLoadingManifests}"
                        ToolTip="Downloads the latest asset catalogs and refreshes asset list."
                        Click="btnRefresh_Click"
                        Padding="5,2,5,2"/>

                <Button x:Name="btnManageCat"
                    Content="Manage Catalogs"
                    ToolTip="Upload an asset to the Asset Store (requires modder credentials)."
                    Click="btnManageCat_Click"
                    Padding="5,3,5,3"/>
            </WrapPanel>

            <CheckBox x:Name="chkFetchAllImages" 
                      Content="Fetch All Preview Images" 
                      ToolTip="Download all preview images for the assets."
                      Margin="0,0,0,7" 
                      IsChecked="{Binding FetchAllPreviewImages, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <CheckBox x:Name="chkDeleteAfterDownload" 
                      Content="Delete Download After Install" 
                      ToolTip="When unchecked the downloaded assets will not be deleted from 'store_data/temp_downloads'"
                      IsChecked="{Binding DeleteDownloadAfterInstall, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>





        <TextBlock Grid.Row="3" Grid.ColumnSpan="2"
                   VerticalAlignment="Bottom"
                   HorizontalAlignment="Left"
                   FontSize="16"
                   Margin="5,0,0,5"
                   TextWrapping="Wrap"
                   Text="{Binding UserMessage, FallbackValue='This is a message to the user ...'}"/>
    </Grid>
</UserControl>
